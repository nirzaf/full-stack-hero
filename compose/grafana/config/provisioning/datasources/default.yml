# config file version
apiVersion: 1

# list of datasources that should be deleted from the database
deleteDatasources:
  - name: Prometheus
    orgId: 1

# list of datasources to insert/update depending
# whats available in the database
datasources:
- name: Prometheus
  type: prometheus
  access: proxy
  # Access mode - proxy (server in the UI) or direct (browser in the UI).
  url: http://host.docker.internal:9090
  uid: prom

- name: Loki
  uid: loki
  type: loki
  access: proxy
  url: http://loki:3100
  # <bool> allow users to edit datasources from the UI.
  editable: true
  jsonData:
    derivedFields:
      - datasourceUid: jaeger
        matcherRegex: (?:"traceid"):"(\w+)"
        name: TraceID
        url: $${__value.raw}

- name: Jaeger
  type: jaeger
  uid: jaeger
  access: proxy
  url: http://jaeger:16686
  readOnly: false
  isDefault: false
  # <bool> allow users to edit datasources from the UI.
  editable: true
  jsonData:
    tracesToLogsV2:
      # Field with an internal link pointing to a logs data source in Grafana.
      # datasourceUid value must match the uid value of the logs data source.
      datasourceUid: 'loki'
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
      tags: [{ key: 'service.names', value: 'service_name' }]
      filterByTraceID: false
      filterBySpanID: false
      customQuery: true
      query: '{$${__tags}} |="$${__trace.traceId}"'
    tracesToMetrics:
      datasourceUid: 'prom'
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
      tags: [{ key: 'service.name', value: 'service' }, { key: 'job' }]
      queries:
        - name: 'Sample query'
          query: 'sum(rate(traces_spanmetrics_latency_bucket{$$__tags}[5m]))'
    nodeGraph:
      enabled: true
    traceQuery:
      timeShiftEnabled: true
      spanStartTimeShift: '1h'
      spanEndTimeShift: '-1h'
    spanBar:
      type: 'None'